{"version":3,"sources":["Redux/Actions/actionTypes.js","components/Cell.tsx","views/IndexSections/Graph.js","components/Graph.tsx","views/IndexSections/SideBar.js","components/SideBar.tsx","Helpers/Visualizer/Visualizer.tsx","Helpers/Vertex/Vertex.tsx","Helpers/Animations/Frame.tsx","Helpers/AdjList/AdjList.tsx","Helpers/Animations/Animator.tsx","Redux/Store/store.js","Redux/Reducer/reducer.js","views/App.js","App.tsx","index.js"],"names":["actions","editCell","blockOrUnBlock","setStart","setEnd","clearFrames","clear","e","id","type","ctrlKey","buttons","preventDefault","button","connect","state","props","dispatch","payload","String","fromCharCode","useSelector","blocked","gameboard","get","start","startVertexid","end","endVertexid","focusedNode","animator","visited","visitedNodes","has","inSolution","solutionNodes","clearOnEdit","frames","size","className","onContextMenu","onClick","onMouseDown","onMouseEnter","style","backgroundColor","getBackgroundColor","width","height","minHeight","minWidth","fontSize","padding","margin","textAlign","Index","Card","CardBody","CardTitle","tag","href","createRows","CardFooter","current","rows","count","currentRow","newCell","push","unshift","map","row","index","Pills","slider1","React","useRef","useState","slider1Value","setSlider1Value","slider2","slider2Value","setSlider2Value","vTabs","setvTabs","useEffect","Slider","create","step","range","min","max","on","values","handle","parseInt","console","log","handleSizeChange","toggleTabs","stateName","Container","Row","Col","xs","display","justifyContent","md","paddingTop","TabContent","activeTab","TabPane","tabId","data-background-color","color","flexDirection","marginBottom","onSubmit","submitSizeChange","alignItems","marginRight","Badge","ref","Button","classNamePrefix","name","defaultValue","label","value","alg","onChange","setAlg","isSearchable","options","placeholder","ButtonGroup","isPaused","disabled","handlePlay","handlePause","handleReset","marginTop","Nav","pills","role","NavItem","NavLink","classnames","active","defAlgs","currentFrame","currentAlg","createGameBoard","pause","play","resetAnimator","setSize","VisualizerVertex","adjList","gameEdges","curr_coordinates","getCoordinates","this","x","y","right","rightBlocked","left","leftBlocked","top","topBlocked","bottom","bottomBlocked","edges","edge","filter","vEdge","vertexId","Math","ceil","Frame","animation","processed","AdjList","set","vertexID","edgeID","addEdge","removeEdge","startID","Map","queue","length","queuedItem","pop","last","path","getEdges","some","item","undefined","stack","stackedItem","list","vertices","vertex","addVertex","GraphAnimator","addAnimation","getFrame","getAnimation","graph","i","animations","delete","Error","frame","algs","AbsVisualizer","immerable","createGameboard","gameBoard","Visualizer","store","createStore","action","produce","draftState","generateFrames","processFrame","node","wrapper","document","documentElement","scrollTop","scrollingElement","body","classList","add","remove","SideBar","Graph","sm","lg","xl","maxWidth","a","unsubscribe","subscribe","getState","requestAnimationFrame","animatorEventTrigger","App","enableMapSet","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bc00b1d1.chunk.js","sourcesContent":["export const actions = {\r\n    //graph dimension actions\r\n    createGraph: \"createGraph\",\r\n    resetGraph: \"resetGraph\",\r\n\r\n    //graph painting user actions\r\n    setStart: \"setStart\",\r\n    setEnd: \"setEnd\",\r\n    blockOrUnblockCell: \"blockOrUnblockCell\",\r\n\r\n    //graph visualizer user actions\r\n    setAlg: \"setAlg\",\r\n    //everytime we set an algorithm we have to regenerate the animations\r\n\r\n    //animator actions\r\n    pause: \"pause\",\r\n    play: \"play\",\r\n    processNextFrame: \"getNext\",\r\n    generateFrames: \"generateFrames\",\r\n    clearFrames: \"clearFrames\",\r\n    resetAnimator: \"resetAnimator\"\r\n\r\n}\r\n\r\n","import React from \"react\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {actions} from \"../Redux/Actions/actionTypes\"\r\n\r\nfunction editCell (blockOrUnBlock: any, setStart: any, setEnd: any, clearFrames: any, clear: boolean) {\r\n    return (e: {button: number, buttons: number, preventDefault: () => void, type: string, ctrlKey: boolean },id: number) => {\r\n        if(e.type === 'mousedown' || e.type === \"mouseenter\"){\r\n            if(e.ctrlKey && e.buttons===1){\r\n                e.preventDefault();\r\n\r\n                blockOrUnBlock(id);\r\n                if(clear) clearFrames();\r\n            }\r\n        }\r\n        else if(e.type === \"contextmenu\"){\r\n            // console.log(\"set end\", e.type, \"rightClick\", \"id\", id);\r\n            e.preventDefault();\r\n            setEnd(id);\r\n            if(clear) clearFrames();\r\n        }\r\n        else if (e.type === 'click') {\r\n            if(e.button === 0 && !e.ctrlKey){\r\n                // console.log(\"set start\", e.type,\"leftClick\", \"id\", id);\r\n                setStart(id);\r\n                if(clear) clearFrames();\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nfunction Cell(props: {id: number, blockOrUnBlock?: any, setStart?: any, setEnd?: any, clearFrames?: any}): JSX.Element {\r\n    let nbsp = String.fromCharCode(160);\r\n    const {id} = props;\r\n\r\n    const {blocked, start, end, focusedNode, visited, inSolution, clearOnEdit} = useSelector(\r\n        (state: {gameboard: any, startVertexid: number, endVertexid: number, animator: any }) => {\r\n            return ({\r\n                blocked:  state.gameboard.get(id).payload.blocked,\r\n                start: state.startVertexid,\r\n                end: state.endVertexid,\r\n                focusedNode: state.animator.focusedNode,\r\n                visited: state.animator.visitedNodes.has(id),\r\n                inSolution: state.animator.solutionNodes.has(id),\r\n                clearOnEdit: state.animator.frames.size > 0\r\n            });\r\n        });\r\n\r\n    let getBackgroundColor = (blocked: boolean, start: number, end: number) => {\r\n        let backgroundColor = \"#32325d\";\r\n\r\n        if(end === focusedNode && inSolution && id!==start && id!==end){\r\n            backgroundColor = \"#2dce89\";\r\n        }\r\n        else if(id === focusedNode && end !==focusedNode){\r\n            backgroundColor = \"#ffd600\"\r\n        }\r\n        // else if(start === id){\r\n        //     backgroundColor = \"#e14eca\"\r\n        // }\r\n        else if(end === id || start === id) {\r\n            backgroundColor = \"lightcoral\"\r\n        }\r\n        else if (visited) {\r\n            backgroundColor = \"#11cdef\"\r\n        }\r\n        else if (blocked) {\r\n            backgroundColor = \"#e14eca\"\r\n        }\r\n        return backgroundColor;\r\n    }\r\n\r\n    return (\r\n        <div className={\"cell\"}\r\n             onContextMenu={(e) => editCell(props.blockOrUnBlock, props.setStart, props.setEnd, props.clearFrames, clearOnEdit)(e, id)}\r\n             onClick={(e) =>  editCell(props.blockOrUnBlock, props.setStart, props.setEnd, props.clearFrames, clearOnEdit)(e, id)}\r\n             onMouseDown={(e) =>  editCell(props.blockOrUnBlock, props.setStart, props.setEnd, props.clearFrames, clearOnEdit)(e, id)}\r\n             onMouseEnter={(e) =>  editCell(props.blockOrUnBlock, props.setStart, props.setEnd,props.clearFrames, clearOnEdit)(e, id)}\r\n             >\r\n            <div style={{\r\n                backgroundColor: getBackgroundColor(blocked, start, end),\r\n                width:  \"1vw\",\r\n                height: \"1vw\",\r\n                minHeight: \"15px\",\r\n                minWidth:\"15px\",\r\n                fontSize: \"10px\",\r\n                padding: \"0\",\r\n                margin: \"0\",\r\n                textAlign: \"center\"\r\n            }}>\r\n                {start===id ? \"s\": \"\"}{end===id ? \"e\": \"\"}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction mapStateToProps(state: any, props: {id: number, payload?: {blocked?: boolean} }): any {\r\n    return ({\r\n        ...props,\r\n    });\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any){\r\n    return ({\r\n        blockOrUnBlock: (id:number) => dispatch({type: actions.blockOrUnblockCell,payload: {id}}),\r\n        setStart: (id: number) => dispatch({type: actions.setStart, payload: {id}}),\r\n        setEnd: (id: number) => dispatch({type: actions.setEnd, payload: {id}}),\r\n        clearFrames: () => dispatch({type: actions.clearFrames})\r\n    });\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cell);","/*!\r\n\r\n=========================================================\r\n* BLK Design System PRO React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/blk-design-system-pro-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport {\r\n  CardBody, CardTitle, CardFooter, Card,\r\n} from \"reactstrap\";\r\n\r\n\r\nexport default function Index(props) {\r\n  return (\r\n    <>\r\n      <div style={{ width: \"100%\", height: \"100%\"}}>\r\n        <Card className=\"bg-default\" style={{minHeight: \"50vh\", width: \"fit-content\"}}>\r\n          <CardBody>\r\n            <h6 className=\"category-social\">\r\n              <i className=\"tim-icons icon-app mr-1\" />\r\n              Graph\r\n            </h6>\r\n            <CardTitle tag=\"h4\">\r\n              <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\r\n                Welcome to Graph Search Visualizer\r\n              </a>\r\n            </CardTitle>\r\n            <p className=\"card-description\">\r\n              Please use the right panel to create graphs, view searching animations, and learn\r\n              about this application's user actions.\r\n            </p>\r\n            <div>\r\n              {props.createRows(props.size)}\r\n            </div>\r\n            <CardFooter className=\"text-center\">\r\n              {/*<Button*/}\r\n              {/*    className=\"btn-round\"*/}\r\n              {/*    color=\"primary\"*/}\r\n              {/*    href=\"#pablo\"*/}\r\n              {/*    onClick={(e) => e.preventDefault()}*/}\r\n              {/*>*/}\r\n              {/*  Clear*/}\r\n              {/*</Button>*/}\r\n            </CardFooter>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Cell from \"../components/Cell\";\r\nimport VGraph from \"../views/IndexSections/Graph.js\";\r\n\r\n//need to figure out a way to do this in nlogn or n\r\nfunction createRows(size: any){\r\n    let current = 0;\r\n    let rows = [];\r\n    let count:number = 1;\r\n\r\n    while(current < size.height){\r\n       let currentRow = [];\r\n       while(count <= (current + 1) * size.width){\r\n           let newCell: JSX.Element | null = <Cell id={count} key={count}></Cell>;\r\n           currentRow.push(newCell);\r\n           count++;\r\n           newCell = null;\r\n       }\r\n       rows.unshift(currentRow);\r\n       currentRow = [];\r\n       current++;\r\n    }\r\n\r\n    return rows.map((row,index) => {\r\n        return (\r\n            <div className={\"row\"} key={\"Row \" + index}>\r\n                {row}\r\n            </div>\r\n        );\r\n    });\r\n\r\n}\r\n\r\nfunction Graph (props: any): JSX.Element{\r\n\r\n        return (\r\n            <VGraph createRows={createRows} size={props.size}></VGraph>\r\n        );\r\n}\r\n\r\nfunction mapStateToProps(state: {size?: {height: number, width: number}, gameboard?: any}): any {\r\n    // console.log(state);\r\n    return ({\r\n        size: state.size,\r\n    });\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any){\r\n    return ({});\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Graph);","/*!\r\n\r\n=========================================================\r\n* BLK Design System PRO React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/blk-design-system-pro-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classnames from \"classnames\";\r\n// reactstrap components\r\nimport {\r\n  NavItem,\r\n  NavLink,\r\n  Nav,\r\n  TabContent,\r\n  TabPane,\r\n  Container,\r\n  Row,\r\n  Col, CardBody, Card, Button, ButtonGroup, Badge,\r\n} from \"reactstrap\";\r\n\r\nimport Slider from \"nouislider\";\r\nimport Select from \"react-select\";\r\n\r\nexport default function Pills(props) {\r\n  const slider1 = React.useRef(null);\r\n  const [slider1Value, setSlider1Value] = React.useState(\"20\");\r\n\r\n  const slider2 = React.useRef(null);\r\n  const [slider2Value, setSlider2Value] = React.useState(\"20\");\r\n\r\n\r\n  const [vTabs, setvTabs] = React.useState(1);\r\n\r\n  React.useEffect(() => {\r\n    try{\r\n    Slider.create(slider1.current, {\r\n      start: [20],\r\n      connect: [true, false],\r\n      step: 1,\r\n      range: { min: 5, max: 30 },\r\n    }).on(\"update\", function (values, handle) {\r\n        setSlider1Value(parseInt(values[0]));\r\n    });\r\n    Slider.create(slider2.current, {\r\n      start: [20],\r\n      connect: [true, false],\r\n      step: 1,\r\n      range: { min: 5, max: 30},\r\n    }).on(\"update\", function (values, handle) {\r\n      setSlider2Value(parseInt(values[0]));\r\n    });\r\n    } catch (e){\r\n      console.log(e);\r\n    }\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    props.handleSizeChange({width: slider1Value, height: slider2Value});\r\n  }, [slider1Value, slider2Value])\r\n\r\n  const toggleTabs = (e, stateName, index) => {\r\n    e.preventDefault();\r\n    switch (stateName) {\r\n      case \"vTabs\":\r\n        setvTabs(index);\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"section section-pills\" style={{padding: \"0\"}}>\r\n        <Container>\r\n          <div id=\"navigation-pills\">\r\n            <div className=\"title\">\r\n              {/*<h4>Graph Search Visualizer</h4>*/}\r\n            </div>\r\n            <Row >\r\n              <Col xs=\"12\" style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                {/*<p className=\"category\">Control Panel</p>*/}\r\n                <Row>\r\n                  <Col md=\"8\" style={{paddingTop: \"0\"}}>\r\n                    <TabContent activeTab={\"vTabs\" + vTabs}>\r\n                      <TabPane tabId=\"vTabs1\">\r\n                        <Card data-background-color=\"red\" style={{margin: \"0\"}}>\r\n                          <CardBody>\r\n                            <h6 className=\"category-social\">\r\n                              <i className=\"fa fa-fire mr-1\" />\r\n                              User Actions\r\n                            </h6>\r\n                            <div className=\"card-description\">\r\n                              <ol style={{\r\n                                // display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\", paddingLeft: \"15px\"\r\n                              }}>\r\n                                <li>Set Start:\r\n                                  <div style={{color: \"rgba(255, 255, 255, 0.6)\"}}>-Left Click on a Cell</div>\r\n                                </li>\r\n\r\n                                <li>Set End:\r\n                                  <div style={{color: \"rgba(255, 255, 255, 0.6)\"}}>-Right Click on a Cell</div>\r\n                                </li>\r\n                                <li>Block Cells</li>\r\n                                <div style={{color: \"rgba(255, 255, 255, 0.6)\"}}>-Hold CTRL + Click</div>\r\n                                <div style={{color: \"rgba(255, 255, 255, 0.6)\"}}>-Hold CTRL + Hold Left Click + Hover</div>\r\n                              </ol>\r\n                            </div>\r\n                          </CardBody>\r\n                        </Card>\r\n                      </TabPane>\r\n                      <TabPane tabId=\"vTabs2\" style={{ padding: \"0 20px\"}} >\r\n\r\n                        <div>\r\n                          <div style={{display: \"flex\", flexDirection: \"column\", marginBottom: \"15px\"}}>\r\n                            <h6 className=\"category-social\" style={{marginBottom: \"10px\"}}>\r\n                              <i className=\"fa fa-fire mr-1\" />\r\n                              Dimensions\r\n                            </h6>\r\n                            <form onSubmit={props.submitSizeChange}>\r\n                            <div style={{marginBottom: \"5px\"}}>\r\n                              <div style={{marginBottom: \"15px\"}}>\r\n                                <div className='text-success' style={{display: \"flex\", alignItems:\"center\", marginBottom: \"15px\"}}>\r\n                                  <span style={{marginRight: \"5px\"}}>Width</span>\r\n                                {/*<label>{slider1}</label>*/}\r\n                                  <Badge color=\"info\" className=\"ml-1\" style={{margin: 0}}>{slider1Value}</Badge>\r\n                                </div>\r\n                                <div className=\"slider\" ref={slider1}/>\r\n                              </div>\r\n                              <div style={{marginBottom: \"10px\"}}>\r\n                                <div className='text-success' style={{display: \"flex\", alignItems:\"center\", marginBottom: \"15px\"}}>\r\n                                  <span style={{marginRight: \"5px\"}}>Height</span>\r\n                                  <Badge color=\"info\" className=\"ml-1\" style={{margin: 0}}>{slider2Value}</Badge>\r\n                                </div>\r\n                                <div className=\"slider\" ref={slider2} />\r\n                              </div>\r\n                            </div>\r\n                              <Button size=\"sm\" style={{width: \"100%\"}} color=\"primary\" type=\"submit\">Generate</Button>\r\n                            </form>\r\n\r\n                          </div>\r\n                          <div style={{marginBottom: \"10px\"}}>\r\n                            <h6 className=\"category-social\" style={{marginBottom: \"10px\"}}>\r\n                              <i className=\"fa fa-fire mr-1\" />\r\n                              Algorithm\r\n                            </h6>\r\n                          <Select\r\n                              className=\"react-select react-select-primary mb-2\"\r\n                              classNamePrefix=\"react-select\"\r\n                              name=\"singleSelect\"\r\n                              defaultValue={ {label: \"breadth-first search\", value: \"bfs\" }}\r\n                              value={props.alg}\r\n                              onChange={(value) => props.setAlg(value.value)}\r\n                              isSearchable={false}\r\n                              options={[\r\n                                {\r\n                                  value: \"bfs\",\r\n                                  label: \"breadth-first search\",\r\n                                  // isDisabled: true,\r\n                                },\r\n                                { value: \"dfs\", label: \"depth-first search\" },\r\n                                // { value: \"biDir\", label: \"bi-directional search\" },\r\n                              ]}\r\n                              placeholder=\"Single Select\"\r\n                          />\r\n                          </div>\r\n                          <ButtonGroup style={{display: \"flex\", justifyContent: \"center\", width: \"100%\", fontSize: \"10px\"}}>\r\n                            {props.isPaused?\r\n                                <Button size={\"sm\"}  color={\"success\"} disabled={!props.isPaused} onClick={props.handlePlay}>Play</Button>:\r\n                                <Button size={\"sm\"} color={\"warning\"} disabled={props.isPaused} onClick={props.handlePause}>Pause</Button>\r\n                            }\r\n                            <Button size={\"sm\"} color={\"primary\"} onClick={props.handleReset}>Reset</Button>\r\n                          </ButtonGroup>\r\n                          </div>\r\n                      </TabPane>\r\n                      <TabPane tabId=\"vTabs3\" style={{}}>\r\n                        Developed by Layth Leo Yousif - 2021 <br /> <br />\r\n                        This application explores the different behaviors of {\"\\n\"} introductory graph algorithms.\r\n                        <br /><br />\r\n                        Build Using:\r\n                        <br />\r\n                        <ul style={{}}>\r\n                          <li style={{color: \"rgba(255, 255, 255, 0.6)\"}}>\r\n                            reactJS\r\n                          </li>\r\n                          <li style={{color: \"rgba(255, 255, 255, 0.6)\"}}>\r\n                            typescript\r\n                          </li >\r\n                          <li style={{color: \"rgba(255, 255, 255, 0.6)\"}}>\r\n                            redux\r\n                          </li>\r\n                          <li style={{color: \"rgba(255, 255, 255, 0.6)\"}}>\r\n                            blk-design-system-pro\r\n                          </li>\r\n\r\n\r\n                        </ul>\r\n\r\n                      </TabPane>\r\n                    </TabContent>\r\n                  </Col>\r\n                  <Col md=\"4\" style={{marginTop: \"20px\"}}>\r\n                    <Nav\r\n                        className=\"nav-pills-primary flex-column\"\r\n                        pills\r\n                        role=\"tablist\"\r\n                    >\r\n                      <NavItem>\r\n                        <NavLink\r\n                            className={classnames({\r\n                              active: vTabs === 1,\r\n                            })}\r\n                            onClick={(e) => toggleTabs(e, \"vTabs\", 1)}\r\n                            href=\"#pablo\"\r\n                        >\r\n                          Actions\r\n                        </NavLink>\r\n                      </NavItem>\r\n                      <NavItem>\r\n                        <NavLink\r\n                            className={classnames({\r\n                              active: vTabs === 2,\r\n                            })}\r\n                            onClick={(e) => toggleTabs(e, \"vTabs\", 2)}\r\n                            href=\"#pablo\"\r\n                        >\r\n                          Visualizer\r\n                        </NavLink>\r\n                      </NavItem>\r\n                      <NavItem>\r\n                        <NavLink\r\n                            className={classnames({\r\n                              active: vTabs === 3,\r\n                            })}\r\n                            onClick={(e) => toggleTabs(e, \"vTabs\", 3)}\r\n                            href=\"#pablo\"\r\n                        >\r\n                          About\r\n                        </NavLink>\r\n                      </NavItem>\r\n                    </Nav>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n            {/* end nav pills */}\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {connect, useSelector} from 'react-redux';\r\nimport {useState} from \"react\";\r\nimport {actions} from \"../Redux/Actions/actionTypes\"\r\nimport VSideBar from \"../views/IndexSections/SideBar.js\"\r\n\r\nfunction SideBar(props: any): JSX.Element {\r\n    const [size, setSize] = useState({height: 5, width: 5});\r\n    const handleSizeChange = (size: {height: number, width: number}) => {\r\n            setSize({...size});\r\n    }\r\n\r\n    const setAlg = (value: any) => props.setAlg(value);\r\n    const handlePlay = props.play;\r\n    const handlePause = props.pause;\r\n    const handleReset = props.resetAnimator;\r\n\r\n    const isPaused = useSelector((state: any) => state.animator.isPaused);\r\n\r\n    const submitSizeChange = (e: any) => {\r\n        console.log(\"Generated New Graph!\");\r\n        e.preventDefault();\r\n        props.createGameBoard(size);\r\n    };\r\n\r\nreturn (\r\n        <VSideBar\r\n            size={size}\r\n            handleSizeChange={handleSizeChange}\r\n            submitSizeChange={submitSizeChange}\r\n            setAlg={setAlg}\r\n            alg={props.currentAlg}\r\n            isPaused={isPaused}\r\n            handlePlay={handlePlay}\r\n            handlePause={handlePause}\r\n            handleReset={handleReset}\r\n        />\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state:{currentAlg: string,size: {height: number, width: number}, animator: {currentFrame: number, isPaused: boolean}}): any {\r\n    return ({\r\n        size: state.size,\r\n        currentFrame: state.animator.currentFrame,\r\n        isPaused: state.animator.isPaused,\r\n        alg: state.currentAlg\r\n    });\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any){\r\n    return ({\r\n        createGameBoard: (size: {height: number, width: number}) => dispatch({type: actions.createGraph, payload: {...size}}),\r\n        pause: () => dispatch({type: actions.pause}),\r\n        play: () => dispatch({type: actions.play}),\r\n        // generateFrames: () => dispatch({type: actions.generateFrames})\r\n        resetAnimator: () => dispatch({type: actions.resetAnimator}),\r\n        setAlg: (alg:string) => dispatch({type: actions.setAlg, payload: {alg: alg}})\r\n    });\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBar);\r\n\r\n","import {IAdjList, AdjList} from \"../AdjList/AdjList\";\r\nimport {immerable} from \"immer\";\r\nimport {IAnimator, GraphAnimator} from \"../Animations/Animator\";\r\n\r\nenum defAlgs {\r\n    default\r\n}\r\n\r\nexport interface IVisualizerCore {\r\n    name: string;\r\n    size: {\r\n        height: number;\r\n        width: number;\r\n    }\r\n    gameboard: IAdjList;\r\n\r\n    algs?: any;\r\n    currentAlg: string;\r\n\r\n    animator?: GraphAnimator;\r\n}\r\n\r\nexport abstract class AbsVisualizer implements IVisualizerCore {\r\n    name: string = \"default\";\r\n    public size = {\r\n        height: 20,\r\n        width: 20\r\n    };\r\n    [immerable] = true;\r\n\r\n    createGameboard: () => IAdjList = () => {\r\n        let gameBoard =  new AdjList();\r\n        const {height, width} = this.size;\r\n        const size = height * width;\r\n        for(let i = 1; i <= size; i++){\r\n            gameBoard.addVertex({blocked: false\r\n            },i);\r\n        }\r\n        this.gameboard = gameBoard;\r\n        return gameBoard;\r\n    }\r\n\r\n    gameboard: IAdjList = this.createGameboard();\r\n    animations?: IAnimator;\r\n    currentAlg: string = \"bfs\";\r\n    algs: any = defAlgs;\r\n\r\n    constructor(name?: string, height?: number, width?: number, algs?: any){\r\n        // console.log(height, width);\r\n\r\n        if(height && width){\r\n            this.size.height = height;\r\n            this.size.width = width;\r\n        }\r\n\r\n        if(algs){\r\n            this.algs = algs;\r\n        }\r\n\r\n        if(name){\r\n            this.name = name;\r\n        }\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\nenum algs {\r\n    BFS,\r\n    DFS,\r\n}\r\n\r\ninterface IVisualizer extends AbsVisualizer {\r\n    startVertexid?: number;\r\n    endVertexid?: number;\r\n}\r\n\r\nexport class Visualizer extends AbsVisualizer implements IVisualizer{\r\n    startVertexid: number = 1;\r\n    endVertexid:number = this.size.height*this.size.width;\r\n    animator = new GraphAnimator();\r\n\r\n    constructor(name?: string, height?: number, width?: number){\r\n        super(name, height, width, algs);\r\n\r\n        this.createGameboard();\r\n        // this.animator.generateFrames(this.gameboard, \"BFS\", this.size, this.startVertexid, this.endVertexid);\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\n\r\n\r\n","import {IAdjList} from \"../AdjList/AdjList\";\r\n\r\nexport interface IVertex{\r\n    id: number;\r\n    payload: {blocked?: boolean};\r\n    edges?: number[];\r\n    addEdge: (edge: number) => void;\r\n    removeEdge: (edge: number) => void;\r\n}\r\n\r\nexport class Vertex implements IVertex {\r\n    payload = {blocked: false};\r\n    id: number = -1;\r\n    edges?: number[] = [];\r\n\r\n    constructor(payload: any, id: number) {\r\n            this.payload = payload;\r\n            this.id = id;\r\n        }\r\n\r\n    addEdge(edge: number){\r\n        try{\r\n            if(this.edges){\r\n                this.edges.push(edge);\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    removeEdge(edge: number){\r\n        try{\r\n            if(this.edges){\r\n                this.edges = this.edges.filter(vEdge => vEdge !== edge);\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n    }\r\n\r\n    public get Edges(){\r\n        return this.edges;\r\n    }\r\n\r\n    public static getCoordinates(vertexId: number, height: number, width: number){\r\n        let y: number = Math.ceil(vertexId/width);\r\n        let x: number = width - (y*width - vertexId);\r\n        return {x, y};\r\n    }\r\n}\r\n\r\nexport interface IVisualizerVertex extends IVertex{\r\n    getEdges(size: {height: number, width: number},adjList: IAdjList): any[];\r\n}\r\n\r\nexport class VisualizerVertex extends Vertex implements IVisualizerVertex {\r\n    public getEdges(size: {height: number, width: number}, adjList: IAdjList){\r\n       const {height, width} = size;\r\n       let gameEdges: number[] = [];\r\n        // let edgeCoordinates: {x: number, y: number}[] = [];\r\n        //possible edges\r\n        //possibly need to exclude diags\r\n        /*\r\n           1. (x+1,y)\r\n           2. (x-1,y)\r\n           3. (x,y+1)\r\n           4. (x-1,y+1) --excluded\r\n           5. (x+1,y+1) --excluded\r\n           6. (x, y-1)\r\n           7. (x-1,y-1) --excluded\r\n           8. (x+1,y-1) --excluded\r\n        */\r\n\r\n        let curr_coordinates = VisualizerVertex.getCoordinates(this.id, height, width);\r\n        let {x,y} = curr_coordinates;\r\n        let {blocked} = this.payload;\r\n\r\n        //right\r\n        // edgeCoordinates.push({x: x + 1, y: y});\r\n        let right = (x+1)+((y-1)*width);\r\n\r\n        if(!blocked){\r\n                if(right < height*width+1 && right <= y*width){\r\n                    let rightBlocked = adjList.get(right);\r\n                    if(rightBlocked && !rightBlocked.payload.blocked){\r\n                        gameEdges.push(right);\r\n                    }\r\n\r\n                }\r\n        }\r\n\r\n        //left\r\n        // edgeCoordinates.push({x:  x - 1, y: y});\r\n        let left = (x-1)+((y-1)*width);\r\n        if(!blocked){\r\n            let leftBlocked = adjList.get(left);\r\n            if(left > 0 && left > (y-1)*width){\r\n                if(leftBlocked && !leftBlocked.payload.blocked){\r\n                    gameEdges.push(left);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        //top\r\n        // edgeCoordinates.push({x:  x, y:  y + 1});\r\n        let top = x+((y)*width);\r\n        if(!blocked){\r\n            let topBlocked = adjList.get(top);\r\n            if(top < height*width+1){\r\n                if(topBlocked && !topBlocked.payload.blocked){\r\n                    gameEdges.push(top);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        //bottom\r\n        // edgeCoordinates.push({x:  x, y: y - 1});\r\n        let bottom = x+((y-2)*width);\r\n        if(!blocked){\r\n            let bottomBlocked = adjList.get(bottom);\r\n            if(bottom > 0){\r\n                if(bottomBlocked && !bottomBlocked.payload.blocked){\r\n                    gameEdges.push(bottom);\r\n                }\r\n            }\r\n        }\r\n\r\n        // const {x, y} = VisVertex.getCoordinates(this.id, )\r\n        return gameEdges;\r\n    }\r\n}","export interface IFrame {\r\n    processed: boolean;\r\n    payload: any;\r\n    animation: string;\r\n}\r\n\r\nexport class Frame implements IFrame {\r\n    processed: boolean = false;\r\n    animation = \"default\";\r\n    payload = {};\r\n\r\n    constructor(animation: string, payload: any) {\r\n        this.payload = payload;\r\n        this.animation = animation;\r\n    }\r\n}","import {IVisualizerVertex, VisualizerVertex} from \"../Vertex/Vertex\";\r\nimport {Frame} from \"../Animations/Frame\";\r\n\r\nexport interface IAdjList extends Map<number,IVisualizerVertex>{\r\n    addVertex: (payload: any, id: number) => void;\r\n    addEdge: (vertexID: number, edgeID: number) => void;\r\n    removeEdge: (vertexID: number, edgeID: number) => void;\r\n\r\n    bfs(startID: number, end:number, size?: {height: number, width: number}): any;\r\n    dfs(startID: number, end:number, size?: {height: number, width: number}): any;\r\n    // dfs?: (startID: number, findID:number, blockedids?:  Map<number,number>, size?: {height: number, width: number}) => {length: number, path?: number[]};\r\n\r\n    // biDir?: (startID: number, findID:number) => {length: number, path?: number[]};\r\n    \r\n}\r\n\r\nexport class AdjList extends Map implements IAdjList{\r\n    [s: string]: any;\r\n\r\n    addVertex(payload: any, id: number){\r\n        this.set(id, new VisualizerVertex(payload, id));\r\n    }\r\n\r\n    addEdge(vertexID: number, edgeID: number){\r\n        this.get(vertexID).addEdge(edgeID);\r\n    }\r\n\r\n    removeEdge(vertexID: number, edgeID: number){\r\n        this.get(vertexID).removeEdge(edgeID);\r\n    }\r\n\r\n    static vertexFactory(list: IAdjList, vertices: any[]){\r\n        for(let vertex of vertices){\r\n            list.addVertex(vertex.payload,vertex.id);\r\n        }\r\n    };\r\n\r\n    static edgeFactory(list: IAdjList, edges: any[]){\r\n        for(let edge of edges){\r\n            let [vertexID, edgeID] = edge;\r\n            list.addEdge(vertexID, edgeID);\r\n        }\r\n    };\r\n\r\n    public bfs(startID: number, end:number, size?: {height: number, width: number}){\r\n        // console.log(this);\r\n        let visited = new Map();\r\n        type queueItem = number[];\r\n        let queue: queueItem[] = [];\r\n\r\n\r\n        let frames = new Map<number, Frame>();\r\n\r\n        //push the start vertex\r\n        queue.push([startID, -1]);\r\n\r\n\r\n        //while the queue has items\r\n        while(queue.length > 0){\r\n            //dequeue last item\r\n            let queuedItem = queue.pop();\r\n\r\n            //get currentIndex and lastIndex if they exist\r\n            let current, last = null;\r\n            if(queuedItem){\r\n                [current, last] = queuedItem;\r\n            }\r\n\r\n            if(current != null){\r\n                frames.set(frames.size, new Frame(\"focus\", {id: current}));\r\n            }\r\n\r\n            //if the desired vertex is found print the path\r\n            if(current === end){\r\n                let path = [current];\r\n\r\n                while(last > -1){\r\n                    path.unshift(last);\r\n                    last = visited.get(last);\r\n                }\r\n                return {length: path.length, path: path, frames: frames};\r\n            }\r\n\r\n            //for each of the edges in this iteration\r\n            let edges;\r\n            if(size){\r\n                edges = this.get(current).getEdges(size, this);\r\n            }\r\n            for(let edge of edges){\r\n                //if the edge is not visited and the edge is not queued queue\r\n                if(!visited.has(edge) && !queue.some(item => item[0]===edge)){\r\n                        queue.unshift([edge,current]);\r\n                }\r\n            }\r\n            //set focus animation\r\n            visited.set(current, last);\r\n        }\r\n        return {length: 0, path: undefined, frames: frames};\r\n    }\r\n\r\n\r\n    dfs(startID: number, end:number, size?: {height: number, width: number}){\r\n        let visited = new Map();\r\n        type stackItem = number[];\r\n        let stack: stackItem[] = [];\r\n\r\n        let frames = new Map<number, Frame>();\r\n\r\n        //push the start vertex\r\n        stack.push([startID, -1]);\r\n\r\n        //while the queue has items\r\n        while(stack.length > 0){\r\n            //dequeue last item\r\n            let stackedItem = stack.pop();\r\n            // console.log(stackedItem);\r\n\r\n            //get currentIndex and lastIndex if they exist\r\n            let current, last;\r\n            if(stackedItem){\r\n                [current, last] = stackedItem;\r\n            }\r\n\r\n            if(current != null){\r\n                frames.set(frames.size, new Frame(\"focus\", {id: current}));\r\n            }\r\n\r\n            //if the desired vertex is found print the path\r\n            if(current === end){\r\n                let path = [current];\r\n                while(last > -1){\r\n                    path.unshift(last);\r\n                    last = visited.get(last);\r\n                }\r\n                return {length: path.length, path: path, frames: frames};\r\n            }\r\n\r\n            //for each of the edges in this iteration\r\n            let edges = this.get(current).getEdges(size, this);\r\n            for(let edge of edges){\r\n                //if the edge is not visited and the edge is not queued queue\r\n                if(!visited.has(edge) && !stack.some(item => item[0]===edge)){\r\n                    stack.push([edge,current]);\r\n                }\r\n            }\r\n            visited.set(current, last);\r\n        }\r\n        return {length: 0, path: undefined, frames: frames};\r\n    }\r\n\r\n\r\n}\r\n","import {IFrame} from \"./Frame\";\r\nimport {IAdjList} from \"../AdjList/AdjList\";\r\n\r\nexport interface IAnimator {\r\n    //animations\r\n    animations?: Map<string, string>\r\n    getAnimation?: (name: string) => string | null;\r\n\r\n    //nn\r\n        addAnimation?: (animation: string) => void;\r\n        removeAnimation?: (name: string) => string | null;\r\n\r\n    //frames\r\n    currentFrame?: number; //maybe create a getter?\r\n    frames?: Map<number, IFrame>;\r\n    addFrame?: (frame: IFrame) => void;\r\n    removeFrame?: (name: number) => IFrame | null;\r\n    getFrame?: (name: number) => IFrame | null;\r\n\r\n    isPaused: boolean;\r\n}\r\n\r\nexport abstract class AbsAnimator implements IAnimator {\r\n    animations = new Map<string,string>();\r\n    frames = new Map();\r\n    currentFrame = 0;\r\n    isPaused: boolean = true;\r\n\r\n    addAnimation(animation: string){\r\n        this.animations.set(animation, animation);\r\n    }\r\n\r\n    removeAnimation(name: string){\r\n        try{\r\n            const animation = this.getAnimation(name);\r\n            this.animations.delete(name);\r\n            return animation;\r\n        } catch (e) {\r\n            console.log(e);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getAnimation(name: string): string | null {\r\n        try {\r\n            let animation = this.animations.get(name);\r\n            if(!animation){\r\n                throw new Error(\"animation doesnt exist\");\r\n            }\r\n            return animation;\r\n        } catch(e) {\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n    addFrame(frame: IFrame){\r\n        this.frames.set(this.frames.size,frame);\r\n\r\n    }\r\n\r\n    removeFrame(name: number){\r\n        try{\r\n            const frame = this.getFrame(name);\r\n            this.frames.delete(name);\r\n            return frame;\r\n        } catch (e) {\r\n            console.log(e);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getFrame(name: number): IFrame | null {\r\n        try {\r\n            return this.frames.get(name);\r\n        } catch(e) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport class Animator extends AbsAnimator {\r\n    //implementation goes here\r\n    constructor(){\r\n        super();\r\n    }\r\n}\r\n\r\nexport interface IGraphAnimator extends IAnimator {\r\n    processFrame: (name: number) => void;\r\n    focusedNode: number | null;\r\n\r\n    //unimplemented\r\n    visitedNodes?: Map<number, number>;\r\n    solutionNodes?: Map<number, number>;\r\n\r\n    //animations\r\n    //focus (and set visit)\r\n    //solve (i.e., set solution)\r\n\r\n\r\n    //utility\r\n    //sets current frame to 0, clears visited, clears solution, regenerates frames\r\n    reset?: () => void;\r\n    generateFrames?: (graph: IAdjList, searchAlg: string,size: any, start: number, end: number) => void;\r\n}\r\n\r\nexport class GraphAnimator extends Animator implements IGraphAnimator{\r\n    [s: string]: null | any;\r\n    focusedNode: number | null = null;\r\n    visitedNodes = new Map<number, number>();\r\n    solutionNodes = new Map<number, number>();\r\n\r\n    constructor(){\r\n        super();\r\n        this.addAnimation(\"focus\");\r\n    }\r\n\r\n    focus(payload: {id: number}){\r\n        this.focusedNode = payload.id;\r\n    }\r\n\r\n    processFrame(){\r\n        const currentFrame = this.getFrame(this.currentFrame);\r\n        if(currentFrame){\r\n            const animation = this.getAnimation(currentFrame.animation);\r\n            if(animation){\r\n                this[animation](currentFrame.payload);\r\n                currentFrame.processed = true;\r\n                this.visitedNodes.set(currentFrame.payload.id, currentFrame.payload.id);\r\n                this.currentFrame++;\r\n            }\r\n        }\r\n    }\r\n\r\n    generateFrames(graph: any, alg:string, size: any, start: number, end: number){\r\n        if(start && end){\r\n            // if(alg = \"bfs\"){\r\n            //\r\n            // }\r\n            try{\r\n                // if(typeof graph[alg]);\r\n                // console.log(graph[alg](start, end, size));\r\n                let {frames, path} = graph[alg](start, end, size);\r\n                this.frames = frames;\r\n                this.solutionNodes.clear();\r\n                if(path){\r\n                    for (let i of path){\r\n                        this.solutionNodes.set(i, i);\r\n                    }\r\n                }\r\n                return frames;\r\n            }\r\n            catch(e){\r\n                console.log(e);\r\n            }\r\n            return;\r\n        }\r\n    }\r\n}\r\n\r\n// bfs(startID: number, findID:number, size?: {height: number, width: number}){\r\n//     animations?animations.push(new Animation(\"test\", ()=>{})):\"\";\r\n//\r\n//     let visited = new Map();\r\n//     type queueItem = number[];\r\n//     let queue: queueItem[] = [];\r\n//\r\n//     //push the start vertex\r\n//     queue.push([startID, -1]);\r\n//\r\n//     //while the queue has items\r\n//     while(queue.length > 0){\r\n//         //dequeue last item\r\n//         let queuedItem = queue.pop();\r\n//\r\n//         //get currentIndex and lastIndex if they exist\r\n//         let current, last;\r\n//         if(queuedItem){\r\n//             [current, last] = queuedItem;\r\n//         }\r\n//\r\n//         //if the desired vertex is found print the path\r\n//         if(current == findID){\r\n//             let path = [current];\r\n//             while(last > -1){\r\n//                 path.unshift(last);\r\n//                 last = visited.get(last);\r\n//             }\r\n//             return {length: path.length, path: path};\r\n//         }\r\n//\r\n//         //for each of the edges in this iteration\r\n//         let edges = this.get(current).getEdges(size, blockedids);\r\n//         for(let edge of edges){\r\n//             //if the edge is not visited and the edge is not queued queue\r\n//             if(!visited.has(edge) && !queue.some(item => item[0]===edge)){\r\n//                 queue.unshift([edge,current]);\r\n//             }\r\n//         }\r\n//         visited.set(current, last);\r\n//     }\r\n//     return {length: 0};\r\n// }","import { createStore } from 'redux';\r\nimport {reducer} from \"../Reducer/reducer\";\r\n\r\nexport const store = createStore(reducer, /* preloadedState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()*/);","import produce from \"immer\";\r\nimport {actions} from \"../Actions/actionTypes\"\r\nimport {Visualizer} from \"../../Helpers/Visualizer/Visualizer\";\r\n\r\nexport const reducer = (state = {}, action) => {\r\n    let nextState;\r\n    // console.log(state);\r\n    switch(action.type) {\r\n        case actions.createGraph:\r\n            return new Visualizer(\"Graph Visualizer\", action.payload.height, action.payload.width);\r\n        case actions.generateFrames:\r\n            nextState  = produce(state, draftState => {\r\n                draftState.animator.generateFrames(state.gameboard,draftState.currentAlg, draftState.size, draftState.startVertexid, draftState.endVertexid);\r\n                draftState.animator.currentFrame = 0;\r\n                draftState.animator.visitedNodes.clear();\r\n                draftState.animator.isPaused = true;\r\n                draftState.animator.focusedNode = null;\r\n            })\r\n            return nextState;\r\n        case actions.processNextFrame:\r\n            //removed immer wrapper to try to address slowness to no avail.\r\n            state.animator.processFrame();\r\n            return state;\r\n        case actions.play:\r\n            nextState  = produce(state, draftState => {\r\n                draftState.animator.isPaused = false\r\n                if(draftState.animator.frames.size === 0){\r\n                    draftState.animator.generateFrames(state.gameboard,draftState.currentAlg, draftState.size, draftState.startVertexid, draftState.endVertexid);\r\n                }\r\n            })\r\n\r\n            return nextState;\r\n        case actions.pause:\r\n            // nextState  = produce(state, draftState => {\r\n            //     draftState.animator.isPaused = true;\r\n            // })\r\n            state.animator.isPaused = true;\r\n            return state;\r\n        case actions.resetAnimator:\r\n            nextState = produce(state, draftState => {\r\n                draftState.animator.currentFrame = 0;\r\n                draftState.animator.focusedNode = null;\r\n                draftState.animator.visitedNodes.clear();\r\n                draftState.animator.isPaused = true;\r\n            })\r\n            return nextState;\r\n        case actions.clearFrames:\r\n            nextState = produce(state, draftState => {\r\n                draftState.animator.currentFrame = 0;\r\n                draftState.animator.focusedNode = null;\r\n                draftState.animator.frames.clear();\r\n                draftState.animator.solutionNodes.clear()\r\n                draftState.animator.visitedNodes.clear();\r\n                draftState.animator.isPaused = true;\r\n            })\r\n\r\n            return nextState;\r\n        case actions.setAlg:\r\n            nextState = produce(state, draftState => {\r\n                draftState.currentAlg = action.payload.alg;\r\n                draftState.animator.currentFrame = 0;\r\n                draftState.animator.focusedNode = null;\r\n                draftState.animator.frames.clear();\r\n                draftState.animator.solutionNodes.clear()\r\n                draftState.animator.visitedNodes.clear();\r\n                draftState.animator.isPaused = true;\r\n            })\r\n            // console.log(nextState);\r\n            return nextState;\r\n        case actions.setStart:\r\n            nextState  = produce(state, draftState => {\r\n                draftState.startVertexid = action.payload.id;\r\n                let blocked = draftState.gameboard.get(action.payload.id).payload.blocked;\r\n                if(blocked === true){\r\n                    blocked = false;\r\n\r\n                    //need to reset as bool is immutable\r\n                    draftState.gameboard.get(action.payload.id).payload.blocked = blocked;\r\n                }\r\n                if(draftState.start === draftState.end){\r\n                    draftState.end = null;\r\n                }\r\n\r\n            })\r\n            // console.log(nextState);\r\n            return nextState;\r\n        case actions.setEnd:\r\n            nextState = produce(state, draftState => {\r\n                draftState.endVertexid = action.payload.id;\r\n                let blocked = draftState.gameboard.get(action.payload.id).payload.blocked;\r\n                if(blocked === true){\r\n                    blocked = false;\r\n                    draftState.gameboard.get(action.payload.id).payload.blocked = blocked;\r\n                }\r\n\r\n                if(draftState.start === draftState.end){\r\n                    draftState.start = null;\r\n                }\r\n            })\r\n            return nextState;\r\n        case actions.blockOrUnblockCell:\r\n            nextState = produce(state, draftState => {\r\n                let node = draftState.gameboard.get(action.payload.id);\r\n                node.payload.blocked = node.payload.blocked? false: true;\r\n                // console.log(\"reducer\", node.payload.blocked);\r\n                if(action.payload.id === draftState.start){\r\n                    draftState.start = null;\r\n                }\r\n                else if(action.payload.id === draftState.end){\r\n                    draftState.end = null;\r\n                }\r\n            });\r\n            // console.log(nextState);\r\n            return nextState;\r\n        default:\r\n            return new Visualizer(\"Graph Visualizer\");\r\n    }\r\n}","/*!\r\n\r\n=========================================================\r\n* BLK Design System PRO React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/blk-design-system-pro-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\n\r\nexport default function Index(props) {\r\n  const wrapper = React.useRef(null);\r\n  React.useEffect(() => {\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    wrapper.current.scrollTop = 0;\r\n    document.body.classList.add(\"index-page\");\r\n    return function cleanup() {\r\n      document.body.classList.remove(\"index-page\");\r\n    };\r\n  }, []);\r\n  const {SideBar, Graph} = props;\r\n  return (\r\n    <>\r\n      {/*<ColorNavbar />*/}\r\n      <div className=\"wrapper\" ref={wrapper} style={{width: \"100%\", display: \"flex\", justifyContent: \"center\"}}>\r\n          <Container  style={{margin: \"0\", minWidth: \"100%\", marginBottom: \"20px\"}}>\r\n            <Row xs={12} style={{padding: \"0\", display: \"flex\", justifyContent: \"center\", alignItems:\"center\"}}>\r\n              <Col xs={12} sm={12} md={7} lg={7} xl={6} style={{padding: \"0\"}}>\r\n                  <Container style={{margin: \"0\", width: \"100%\", height: \"100%\", maxWidth: \"1500px\", display:\"flex\", justifyContent: \"center\"}}>\r\n                    <Row style={{padding: \"0\", width: \"100%\", height: \"100%\"}}>\r\n                      <Graph/>\r\n                    </Row>\r\n                  </Container>\r\n              </Col>\r\n              <Col xs={12} sm={12} md={5} lg={5} xl={4} style={{padding: \"0\"}}>\r\n                <SideBar />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Graph from \"./components/Graph\";\r\nimport SideBar from \"./components/SideBar\";\r\nimport {store} from \"./Redux/Store/store\";\r\nimport {Provider} from \"react-redux\";\r\nimport {actions} from \"./Redux/Actions/actionTypes\";\r\nimport VApp from \"./views/App.js\";\r\n\r\n\r\n//this is used to play and pause without having to rely on the useEffect Hook\r\n//request animation frame is used instead of setTimeout as it fails around 10ms.\r\n//when the condition is satisfied an action is dispatched that calls\r\n// the reducer that processes the next frame\r\nlet animatorEventTrigger = async () => {\r\n    const unsubscribe = store.subscribe(() => {\r\n        const {isPaused} = store.getState().animator;\r\n        if (isPaused === false) {\r\n            requestAnimationFrame(() => store.dispatch({type: actions.processNextFrame}))\r\n        }\r\n    });\r\n    return unsubscribe;\r\n}\r\n\r\n//used to envoke Trigger\r\n//returns a lamda that unsuscribes from the reduxStore\r\nlet unsuscribe = animatorEventTrigger();\r\n\r\nfunction App(): JSX.Element {\r\n  return (\r\n    <div className=\"index-page\" style={{\r\n      // backgroundColor: \"#282c34\",\r\n      height: \"100vh\",\r\n      color: \"white\",\r\n      display: \"flex\"\r\n    }}>\r\n        <Provider store={store}>\r\n        <VApp SideBar={SideBar} Graph={Graph}></VApp>\r\n        </Provider>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/*!\n\n=========================================================\n* BLK Design System PRO React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/blk-design-system-pro-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport {enableMapSet} from \"immer\";\n// styles\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/css/nucleo-icons.css\";\nimport \"assets/scss/blk-design-system-pro-react.scss?v1.2.0\";\nimport \"assets/demo/demo.css\";\nimport \"assets/demo/react-demo.css\";\n\n// presentation pages\nimport App from \"./App\";\n\nenableMapSet();\n\nReactDOM.render(\n    <App></App>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}